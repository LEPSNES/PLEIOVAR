% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pc_snp_one_chrom.R
\name{pc_snp_one_chrom}
\alias{pc_snp_one_chrom}
\title{Paralelly generate pc_snp for each gene of one chrom}
\usage{
pc_snp_one_chrom(
  gene_bed_file = fs::path_package("PLEIOVAR", "extdata", "gene", "chrom_20.bed"),
  out_dir = "tmpout"
)
}
\arguments{
\item{gene_bed_file}{Include genes from one chrom with 4 columns "chr", "start", "end", "gene".}

\item{out_dir}{The directory containing the outputs of different steps, and at least chrom-partitioned assembled files}
}
\value{
The exit status of future_walk function
}
\description{
Genes are read from a chrom bed file, remove the ones without the corresponding assembled file, which is stored at
out_dir/chrom/gene_name.rds, and paralelly generate pc snps for all the genes using future framework via furrr package.
}
\examples{

# Process one chrom
# Set up workers. Parallel framework, future, is called internally via furrr
tic("One chrom")
gene_bed_file <-  fs::path_package("PLEIOVAR", "extdata", "gene", "chrom_22.bed")
out_dir <-  "tmpout"
plan(multisession, workers = 12)
pc_snp_one_chrom(gene_bed_file, out_dir)
plan(sequential)
toc()

# Process multiple chroms
# Set up workers. But use function walk(), not future_walk(), to avoid double paralleling at both chrom and gene levels.
tic("Multiple chroms")
gene_bed_dir <-  fs::path_package("PLEIOVAR", "extdata", "gene")
out_dir <-  "tmpout"
plan(multisession, workers = 12)
dir_ls(gene_bed_dir, regexp = ".*chrom_[1-9].*") |>
  walk(function(gene_bed_file) {
    tic(gene_bed_file)
    pc_snp_one_chrom(gene_bed_file, out_dir)
    toc()
  })
plan(sequential)
toc()

}
