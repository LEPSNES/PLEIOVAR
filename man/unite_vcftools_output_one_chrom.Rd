% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unite_vcftools_output_one_chrom.R
\name{unite_vcftools_output_one_chrom}
\alias{unite_vcftools_output_one_chrom}
\title{Process genes in one chrom}
\usage{
unite_vcftools_output_one_chrom(
  vcftools_output = "result/chrom_20/vcftools_output"
)
}
\arguments{
\item{vcftools_output}{Dir path storing assembled files output by vcftools}
}
\value{
The exit status of future_walk function
}
\description{
Paralelly unite the three vcftool files of one gene into one rds for all genes on one chrom by calling the one gene processing function
unite_vcftools_output_one_gene().
}
\examples{

# Process one chrom
tic("One tst chrom")
d <- "result/chrom_20/vcftools_output"
plan(multisession, workers = 12)
unite_vcftools_output_one_chrom(
  vcftools_output = d
)
plan(sequential)
toc()

# Process multiple chroms
# Set up workers. But use function walk(), not future_walk(), to avoid double paralleling at both chrom and gene levels.
tic("Multiple chroms")
assembled_dir <- "result"
plan(multisession, workers = 72)
dir_ls(assembled_dir, regexp = ".*chrom_[1-9].*") |>
  path("vcf_output") |>
    walk(function(chrom) {
      tic(chrom)
      unite_vcftools_output_one_chrom(chrom)
      toc()
     })

plan(sequential)
toc()


}
